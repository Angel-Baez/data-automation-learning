#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üî¢ Calculadora B√°sica - Semana 1
Proyecto del roadmap Data + Automation Engineer

Autor: Angel Baez
Fecha: Octubre 2025
Descripci√≥n: Calculadora interactiva con operaciones b√°sicas
             y manejo de errores
"""


def mostrar_menu():
    """Muestra el men√∫ principal de la calculadora"""
    print("\n" + "=" * 30)
    print("üî¢ CALCULADORA B√ÅSICA")
    print("=" * 30)
    print("1. ‚ûï Sumar")
    print("2. ‚ûñ Restar")
    print("3. ‚úñÔ∏è  Multiplicar")
    print("4. ‚ûó Dividir")
    print("5. üö™ Salir")
    print("-" * 30)


def obtener_numeros():
    """
    Solicita y valida dos n√∫meros del usuario
    Returns:
        tuple: (numero1, numero2) o None si hay error
    """
    try:
        print("\nIngresa los n√∫meros para la operaci√≥n:")
        num1 = float(input("Primer n√∫mero: "))
        num2 = float(input("Segundo n√∫mero: "))
        return num1, num2
    except ValueError:
        print("‚ùå Error: Por favor ingresa n√∫meros v√°lidos")
        return None


def sumar(a, b):
    """Realiza la suma de dos n√∫meros"""
    return a + b


def restar(a, b):
    """Realiza la resta de dos n√∫meros"""
    return a - b


def multiplicar(a, b):
    """Realiza la multiplicaci√≥n de dos n√∫meros"""
    return a * b


def dividir(a, b):
    """
    Realiza la divisi√≥n de dos n√∫meros
    Args:
        a (float): Dividendo
        b (float): Divisor
    Returns:
        float: Resultado de la divisi√≥n
    Raises:
        ZeroDivisionError: Si el divisor es cero
    """
    if b == 0:
        raise ZeroDivisionError("No se puede dividir por cero")
    return a / b


def obtener_opcion_menu():
    """
    Obtiene y valida la opci√≥n del men√∫ seleccionada por el usuario
    Returns:
        int: Opci√≥n v√°lida del men√∫ (1-5)
    """
    while True:
        try:
            opcion = int(input("Elige una operaci√≥n (1-5): "))
            if 1 <= opcion <= 5:
                return opcion
            else:
                print("‚ùå Por favor elige una opci√≥n entre 1 y 5")
        except ValueError:
            print("‚ùå Por favor ingresa un n√∫mero v√°lido")


def realizar_operacion(opcion, num1, num2):
    """
    Ejecuta la operaci√≥n matem√°tica seg√∫n la opci√≥n elegida
    Args:
        opcion (int): N√∫mero de operaci√≥n (1-4)
        num1 (float): Primer n√∫mero
        num2 (float): Segundo n√∫mero
    Returns:
        float: Resultado de la operaci√≥n
    """
    operaciones = {
        1: (sumar, "suma", "‚ûï"),
        2: (restar, "resta", "‚ûñ"),
        3: (multiplicar, "multiplicaci√≥n", "‚úñÔ∏è"),
        4: (dividir, "divisi√≥n", "‚ûó"),
    }

    funcion, nombre, simbolo = operaciones[opcion]

    try:
        resultado = funcion(num1, num2)
        print(f"\n‚úÖ Resultado de la {nombre}:")
        print(f"   {num1} {simbolo} {num2} = {resultado}")
        return resultado
    except ZeroDivisionError as e:
        print(f"‚ùå Error: {e}")
        return None


def preguntar_continuar():
    """
    Pregunta al usuario si desea realizar otra operaci√≥n
    Returns:
        bool: True si quiere continuar, False si no
    """
    while True:
        continuar = input("\n¬øDeseas realizar otra operaci√≥n? (s/n): ").lower().strip()
        if continuar in ["s", "si", "s√≠", "y", "yes"]:
            return True
        elif continuar in ["n", "no"]:
            return False
        else:
            print("‚ùå Por favor responde con 's' para s√≠ o 'n' para no")


def main():
    """Funci√≥n principal de la calculadora"""
    print("üéâ ¬°Bienvenido a la Calculadora B√°sica!")
    print("Proyecto: Data + Automation Engineer Journey - Semana 1")

    while True:
        mostrar_menu()
        opcion = obtener_opcion_menu()

        if opcion == 5:
            print("\nüëã ¬°Gracias por usar la calculadora!")
            print("üöÄ Contin√∫a con tu journey de Data Engineering")
            break

        # Obtener n√∫meros del usuario
        numeros = obtener_numeros()
        if numeros is None:
            continue  # Volver al men√∫ si hubo error en la entrada

        num1, num2 = numeros

        # Realizar la operaci√≥n
        resultado = realizar_operacion(opcion, num1, num2)

        # Preguntar si quiere continuar (solo si la operaci√≥n fue exitosa)
        if resultado is not None:
            if not preguntar_continuar():
                print("\nüëã ¬°Gracias por usar la calculadora!")
                print("üöÄ Contin√∫a con tu journey de Data Engineering")
                break


if __name__ == "__main__":
    main()
